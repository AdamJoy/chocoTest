apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.chrisaj.chocotest"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // Keystore設定
    signingConfigs {
        debug {
            storeFile file(rootProject.file("debug.keystore"))
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            applicationIdSuffix ".debug"   // 一次可以安裝測試版、正式版APK
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    dataBinding {
        enabled true
    }

    // 不同版本切換設定
    productFlavors {

        flavorDimensions "dimension"

        def formal_url = "\"https://static.linetv.tw/\""   // 正式區domain
        def test_url   = "\"https://static.linetv.tw/\""   // 測試區domain

        /* Formal版 */
        formal {
            buildConfigField "String", "API_SERVER_URL", formal_url
            buildConfigField "boolean", "DEBUG_MODE", "false"
            resValue "string", "app_name", "@string/app_formal_name"
        }

        /* Test版 */
        internalTest {
            buildConfigField "String", "API_SERVER_URL", test_url
            buildConfigField "boolean", "DEBUG_MODE", "true"
            resValue "string", "app_name", "@string/app_test_name"
        }
    }
    // Build Variant 顯示過濾設定
    variantFilter { variant ->
        if (variant.buildType.name == 'release') {
            variant.setIgnore(variant.getFlavors().get(0).name != 'formal')
        }
        if (variant.buildType.name == 'debug') {
            variant.setIgnore(variant.getFlavors().get(0).name == 'formal')
        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    // recyclerView
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    // lifecycle
    //implementation "android.arch.lifecycle:extensions:1.1.1"       // import v4 pack
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'   // 缺少這個ViewModelProvider會import v4 pack包裡面的，必須是androidx
    implementation 'androidx.cardview:cardview:1.0.0'
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.2.0"

}
